#include <iostream>
#include <thread>
#include <vector>

void bubble_sort(std::vector<int>& arr, int start, int end) {
    for (int i = start; i <= end; i++) {
        for (int j = start; j <= end - 1; j++) {
            if (arr[j] > arr[j+1]) {
                std::swap(arr[j], arr[j+1]);
            }
        }
    }
}

int main() {
    std::vector<int> arr {5, 3, 8, 4, 2, 1, 9, 7, 6};
    int num_threads = 2;
    int chunk_size = arr.size() / num_threads;

    std::vector<std::thread> threads;
    for (int i = 0; i < num_threads; i++) {
        int start = i * chunk_size;
        int end = start + chunk_size - 1;
        threads.emplace_back(bubble_sort, std::ref(arr), start, end);
    }

    for (auto& thread : threads) {
        thread.join();
    }

    std::cout << "Sorted array: ";
    for (int i = 0; i < arr.size(); i++) {
        std::cout << arr[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}
